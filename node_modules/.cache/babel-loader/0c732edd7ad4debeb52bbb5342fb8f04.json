{"ast":null,"code":"var _jsxFileName = \"D:\\\\github\\\\invest\\\\src\\\\components\\\\common\\\\FormsControls\\\\FormsControls.js\";\nimport React from \"react\";\nimport styles from './FormsControls.module.css';\n\nconst FormControl = ({\n  input,\n  meta,\n  child,\n  ...props\n}) => {\n  //<-- rest оператор!!! достаем input и meta деструктуризацией,\n  // в пропсах будет все\n  // кроме инпут и мета\n  const hasError = meta.touched && meta.error;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.formControl + ' ' + (hasError ? styles.error : \"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, props.children), hasError && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 26\n    }\n  }, meta.error));\n};\n\nexport const Input = props => {\n  const {\n    input,\n    meta,\n    ...restProps\n  } = props;\n  return /*#__PURE__*/React.createElement(FormControl, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, input, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 36\n    }\n  })));\n};","map":{"version":3,"sources":["D:/github/invest/src/components/common/FormsControls/FormsControls.js"],"names":["React","styles","FormControl","input","meta","child","props","hasError","touched","error","formControl","children","Input","restProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,IAAR;AAAcC,EAAAA,KAAd;AAAqB,KAAGC;AAAxB,CAAD,KAAoC;AACpD;AACA;AACA;AACA,QAAMC,QAAQ,GAAGH,IAAI,CAACI,OAAL,IAAgBJ,IAAI,CAACK,KAAtC;AACA,sBACI;AAAK,IAAA,SAAS,EAAER,MAAM,CAACS,WAAP,GAAqB,GAArB,IAA4BH,QAAQ,GAAGN,MAAM,CAACQ,KAAV,GAAkB,EAAtD,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,KAAK,CAACK,QADX,CADJ,EAIKJ,QAAQ,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOH,IAAI,CAACK,KAAZ,CAJjB,CADJ;AAQH,CAbD;;AAgBA,OAAO,MAAMG,KAAK,GAAIN,KAAD,IAAW;AAC5B,QAAM;AAACH,IAAAA,KAAD;AAAQC,IAAAA,IAAR;AAAc,OAAGS;AAAjB,MAA8BP,KAApC;AACA,sBAAO,oBAAC,WAAD,oBAAiBA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAwB,+CAAWH,KAAX,EAAsBU,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAxB,CAAP;AACH,CAHM","sourcesContent":["import React from \"react\";\r\nimport styles from './FormsControls.module.css';\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n    //<-- rest оператор!!! достаем input и meta деструктуризацией,\r\n    // в пропсах будет все\r\n    // кроме инпут и мета\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}"]},"metadata":{},"sourceType":"module"}